{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _onRes(response) {\n    return response.ok ? response.json() : Promise.reject({\n      ...response,\n      message: \"Ошибка на стороне сервиса\"\n    });\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._onRes);\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._onRes);\n  }\n  updateUserProfileInfo(dataProfile) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: dataProfile.name,\n        about: dataProfile.about\n      })\n    }).then(this._onRes);\n  }\n  addNewCard(dataCard) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: dataCard.name,\n        link: dataCard.link\n      })\n    }).then(this._onRes);\n  }\n  deleteCardById(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._onRes);\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        headers: this._headers,\n        method: 'DELETE'\n      }).then(this._onRes);\n    } else {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        headers: this._headers,\n        method: 'PUT'\n      }).then(this._onRes);\n    }\n  }\n  editAvatarUser(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._onRes);\n  }\n}\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-64',\n  headers: {\n    authorization: '22daa57c-a1b8-4d9c-9a76-1d146d442b74',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","_baseUrl","_headers","_onRes","response","ok","json","Promise","reject","message","getInitialCards","fetch","then","getUserInfo","updateUserProfileInfo","dataProfile","method","body","JSON","stringify","name","about","addNewCard","dataCard","link","deleteCardById","cardId","changeLikeCardStatus","isLiked","editAvatarUser","data","avatar","api","authorization"],"sources":["/Users/kirillsysoev/Documents/Privat/yandex_practicum/react-mesto-main-auth/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n\tconstructor({ baseUrl, headers }) {\n\t\tthis._baseUrl = baseUrl;\n\t\tthis._headers = headers;\n\t}\n\n\t_onRes(response) {\n\t\treturn response.ok ? response.json() : Promise.reject({ ...response, message: \"Ошибка на стороне сервиса\" });\n\t}\n\n\tgetInitialCards() {\n\t\treturn fetch(`${this._baseUrl}/cards`, {\n\t\t\theaders: this._headers\n\t\t}).then(this._onRes)\n\t}\n\n\tgetUserInfo() {\n\t\treturn fetch(`${this._baseUrl}/users/me`, {\n\t\t\theaders: this._headers\n\t\t}).then(this._onRes)\n\t}\n\n\n\tupdateUserProfileInfo(dataProfile) {\n\t\treturn fetch(`${this._baseUrl}/users/me`, {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: this._headers,\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: dataProfile.name,\n\t\t\t\tabout: dataProfile.about\n\t\t\t})\n\t\t}).then(this._onRes)\n\t}\n\n\taddNewCard(dataCard) {\n\t\treturn fetch(`${this._baseUrl}/cards`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: this._headers,\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: dataCard.name,\n\t\t\t\tlink: dataCard.link\n\t\t\t})\n\t\t}).then(this._onRes)\n\t}\n\n\tdeleteCardById(cardId) {\n\t\treturn fetch(`${this._baseUrl}/cards/${cardId}`, {\n\t\t\tmethod: \"DELETE\",\n\t\t\theaders: this._headers,\n\t\t}).then(this._onRes)\n\t}\n\n\tchangeLikeCardStatus(cardId, isLiked) {\n\t\tif (isLiked) {\n\t\t\treturn fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n\t\t\t\theaders: this._headers,\n\t\t\t\tmethod: 'DELETE'\n\t\t\t})\n\t\t\t\t.then(this._onRes)\n\t\t} else {\n\t\t\treturn fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n\t\t\t\theaders: this._headers,\n\t\t\t\tmethod: 'PUT'\n\t\t\t})\n\t\t\t\t.then(this._onRes)\n\t\t}\n\t}\n\n\teditAvatarUser(data) {\n\t\treturn fetch(`${this._baseUrl}/users/me/avatar`, {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: this._headers,\n\t\t\tbody: JSON.stringify({\n\t\t\t\tavatar: data.avatar\n\t\t\t})\n\t\t})\n\t\t\t.then(this._onRes);\n\t}\n}\n\nexport const api = new Api({\n\tbaseUrl: 'https://mesto.nomoreparties.co/v1/cohort-64',\n\theaders: {\n\t\tauthorization: '22daa57c-a1b8-4d9c-9a76-1d146d442b74',\n\t\t'Content-Type': 'application/json'\n\t}\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}